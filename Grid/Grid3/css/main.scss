@import 'variables';
@import 'mixins';

:root {
  --primario: #7abe47;
  --secundario: #ffc845;
  --negro: #000000;
  --claro: #ffffff;
  --gris: #eeeeee;
  --oscuro: #57a42b;
  --padding: 1rem;
  --paddingt: 2rem;
}

* {
  padding: 0;
  margin: 0;
  text-decoration: none;
  list-style: none;
  font-family: Arial, Helvetica, sans-serif;
}

body {
  background-color: var(--gris);
}

.contenedor {
  max-width: 1100px;
  margin: 0 auto;
}

img {
  max-width: 100%;
}

header {
  background-color: var(--primario);
  padding: var(--padding);

  .navegacion {
    display: grid;
    grid-template-columns: 1fr; // una columna el elemento alineadao a la izquierda
    row-gap: 10px;

    // 1fr va a ocupar lo maximo posible, auto se ajusta a su contenido
    @include escritorio {
      grid-template-columns: 30% 1fr 30%; // 1fr es mejor

      img {
        grid-column: 1/3; // es del 1/3 queremos que ocupe demás puesto qeu su tamaño es mayor que el 30%
      }

      ul {
        grid-column: 3/4;
      }
    }

    // img {
    //   justify-self: center;
    // }

    ul {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));

      li {
        display: grid;
        // El alineamiento hace que no salga el pointer en todo el li, no sé cómo solucionarlo
        align-items: center;
        justify-items: center;

        &:hover {
          background-color: var(--oscuro);
        }

        a {
          color: var(--claro);
        }
      }
    }
  }
}

.sobre-nosotros {
  display: grid;
  grid-template-columns: 1fr;
  align-items: center; // de arriba a abajo
  justify-items: center; //  de izquierda a derecha
  padding: var(--paddingt) 0;

  @include escritorio {
    grid-template-columns: repeat(2, 1fr);

    img {
      grid-column: 1/2;
    }
  }

  .nosotros-texto {
    padding: var(--padding);

    h1 {
      text-align: center;
      padding-bottom: 10px;

      @include escritorio {
        text-align: left;
      }
    }

    p {
      text-align: justify;
    }
  }
}

main {
  padding-bottom: var(--padding);
  display: grid;

  row-gap: 15px;
  column-gap: 15px;
  grid-template-columns: repeat(2, 1fr);
  // justify-items: start;
  // align-content: start;
  img {
    width: 100%;
  }

  @include escritorio {
    grid-template-columns: repeat(3, 1fr);
  }

  .destacado {
    display: grid;
    grid-column: 1/3;

    @include tablet {
      grid-template-columns: repeat(2, 1fr);
    }

    .destacado-descripcion {
      display: grid;
      align-items: start; // ocupa todo el contenedor
      border: 2px solid #333030;
      padding: var(--padding);
    }
  }

  .precio {
    font-size: 15px;
    font-weight: bold;

    span {
      text-decoration: underline;
      color: var(--primario);
    }
  }

  .boton {
    @include boton(var(--primario), var(--claro), var(--primario));

    &:hover {
      transition: 0.6s;
      @include boton(var(--claro), var(--primario), var(--primario));
    }
  }

  article {
    display: grid;
    align-self: start; // TODO ver que pasa si quitas esto xd, lo qeu pasa es qeu si no le decimos una alineacion poreparte los hijos en todo lo alto del contenedor

    .casa-descripcion {
      padding: var(--padding);
      display: grid; // Hace que se ensanchen los botones
      border: 2px solid #333030;

      h1 {
        padding-bottom: 10px;
      }

      .precio {
        padding: 15px 0;
      }
    }
  }
}

footer {
  background-color: var(--primario);
  color: var(--claro);

  h2 {
    padding: 10px 0;
  }

  .footer-contenido {
    padding: var(--padding) 0;
    display: grid;
    column-gap: var(--padding);
    padding: 10px;

    @include escritorio {
      // no hace falta decir que cols ocupa puesto que se colocan solos los contenedores
      grid-template-columns: 30% 20% 2fr;
    }

    .navegacion {
      ul {
        li {
          margin-bottom: 10px;
          a {
            color: var(--claro);
          }
        }
      }
    }

    .casas-venta {
      @include escritorio {
        grid-column: 3/4;
      }

      .casas {
        display: grid;
        // para cada hijo del contenedor casas, osea los articulos dentro,
        // se dividiran en 200px minimo cada uno maximo 1fr
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        row-gap: 10px;

        article {
          // contienen la imagen y la descripcion de la casa
          // se divide en dos columnas que ocupan la mitad cada una
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          align-items: center;
          column-gap: 10px;
        }
      }
    }
  }

  .derechos {
    display: grid;
    background-color: var(--oscuro);
    justify-items: center;
    padding: var(--padding) 0;
  }
}
