@import 'variables';
@import 'mixins';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; // no porque generan conflictos en las cajas
  list-style: none;
  text-decoration: none;
}

// para qu elas imagenes usan mas content
// img {
//   max-width: 100%;
// }

body {
  font-family: Arial, Helvetica, sans-serif;
}

.container {
  margin: 0 auto;
  max-width: 1100px;
}

header {
  display: grid;
  grid-template-columns: 1fr; // es una sola columna y el elemento lo alinea a la izquierda

  img {
    max-width: 100%; // serviria poniendo solo con max-width, no hari falta el display column
  }
}

nav {
  background-color: $bg-color;
  margin: $spacing2 0;

  ul {
    display: grid;
    // hueco que queda libre, es auto-fill SIEMPRE VA A IR EN LOS ARTICULOS, el divide,
    // ocupa todo aunque el espacio o contenido sea menor
    // que el hueco se rellene es auto-fit
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));

    li {
      // para que el li ocupe todo, entonces el a pontiner saldra en todo el bloque
      display: grid; // para que crezca el hijo y se rellene el espacio

      &:hover {
        background-color: $verde-color;

        a {
          color: black;
        }
      }

      a {
        padding: $spacing2;
        color: $font-color;
      }
    }
  }
}

main {
  article {
    img {
      width: 100%;
    }
  }

  section {
    display: grid;
    // justify-items: center;
    grid-template-columns: 1fr; // los hijos se meten cada uno en sus huecos sin hacer nada(uno debajo de otro
    // solo en todo caso se deberia indicar la alineacion de los objetos)

    @include mediaQuery {
      // align-items: center;
      // crea 3 columnas y 4 filas
      grid-template-columns: minmax(10px, max-content) auto minmax(100px,
          max-content);
      grid-template-rows: repeat(4, auto);
      column-gap: $spacing2;

      h1 {
        grid-row: 1/2; // no haria falta pornerlo pq ya esta en su fila, los demás sí
        grid-column: 1/4;
      }

      .detalles {
        grid-row: 2/3;
        grid-column: 1/2;
      }

      .mini1 {
        grid-row: 3/4;
        grid-column: 3/4;
      }

      .mini2 {
        grid-row: 4/5;
        grid-column: 1/2;
      }

      .texto {
        grid-row: 2/5;
        grid-column: 2/3;
      }
    }

    .detalles {
      // que los detalles vayan creciendo y ocupen todo, ponemos
      display: grid;
      align-items: center; // se alinean verticalmente
      // afecta el padre
      // justify-self: normal; // se achica como si fuera una torre si no ponemos esto
      // align-self: normal; // aling self se apalsta si no le ponemos esto
      margin: $spacing2 0;

      li {
        text-align: center;
        // margin: $spacing1 0;
        font-weight: bold;
      }
    }

    h1 {
      margin: $spacing2 0;
      font-weight: 900;
      text-align: center;
    }

    div {
      p {
        margin: $spacing1 10px;
        text-align: justify;
      }

      .especial {
        margin: 0 4rem;
        font-size: larger;
        font-style: italic;
      }
    }
  }

  ul {
    background-color: $verde-color;

    li {
      a {
        font-size: large;
        text-align: center;
        color: $font-color;
      }
    }
  }

  img {
    max-width: 100%;
  }
}

footer {
  background-color: $verde-color;

  .footer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    padding: $spacing1 0;

    ul {
      li {
        text-align: center;
        padding: 3px 0;

        h4 {
          margin: $spacing2 0;
        }

        a {
          color: $enlaces-footer;
          text-transform: uppercase;
        }
      }
    }
  }

  .copy {
    background-color: $fondo-copy;
    padding: $spacing1 0;

    p {
      font-weight: bolder;
      text-align: center;
      color: white;
    }
  }
}